- name: Get datasheet page
  delegate_to: localhost
  uri:
    url: "{{ uberspace_urls.datasheet }}"
    headers: "{{ uberspace_headers }}"
    return_content: yes
  register: datasheetresult

- name: Set uberspace facts from dashboard
  set_fact:
    uberspace_ip_public_v4: "{{ parsed_ipv4address }}"
    uberspace_ip_public_v6: "{{ parsed_ipv6address }}"

- name: Put host keys into local known_hosts
  delegate_to: localhost
  vars:
    hostkey: "{{ lookup('pipe','ssh-keyscan -t ' + item + ' ' + uberspace_domain_official + ' 2>/dev/null | cut -d \" \" -f 1 --complement') }}"
    actual_hostkey_fingerprint: "{{ lookup('pipe','echo \"' + hostkey + '\" | ssh-keygen -l -f - | cut -d \" \" -f 2 | cut -d \":\" -f 2') }}"
    ssh_hostnames:
    - "{{ uberspace_domain_official }}"
    - "{{ uberspace_ip_public_v4 }}"
    - "{{ uberspace_ip_public_v6 }}"
  loop:
  - ed25519
  - rsa
  when: actual_hostkey_fingerprint == parsed_hostkeyfingerprint
  known_hosts:
    name: "{{ uberspace_domain_official }}"
    key: "{{ ssh_hostnames | join(',') }} {{ hostkey }}"

- name: Gather facts
  gather_facts:

- name: Set uberspace facts from ansible facts
  set_fact:
    uberspace_ip_private_v4: "{{ ansible_default_ipv4.address }}"
    uberspace_ip_private_v6: "{{ ansible_default_ipv6.address }}"
    uberspace_host: "{{ ansible_hostname }}"

- name: List ports
  tags: ports
  command: "uberspace port list"
  changed_when: false
  register: uberspace_ports
- name: Store ports as fact
  tags: ports
  set_fact:
    uberspace_ports: "{{ uberspace_ports.stdout_lines }}"

- name: List domains
  tags: domains
  command: "uberspace web domain list"
  changed_when: false
  register: uberspace_domains
- name: Store domains as fact
  tags: domains
  set_fact:
    uberspace_domains: "{{ uberspace_domains.stdout_lines }}"

- name: List web backends
  tags: backends
  command: "uberspace web backend list"
  changed_when: false
  register: uberspace_webbackends
- name: Store web backends as fact
  tags: backends
  set_fact:
    uberspace_webbackends: "{{ uberspace_webbackends.stdout_lines }}"

- name: Get MySQL my.cnf file
  tags: mysql
  fetch:
    flat: yes
    src: ".my.cnf"
    dest: "{{ uberspace_mycnffetch_destination }}"

- name: Store MySQL passwords as fact
  tags: mysql
  set_fact:
    uberspace_mysqlpassword: "{{ lookup('ini', 'password section=client file=' + uberspace_mycnffetch_destination) }}"
    uberspace_mysqlpassword_readonly: "{{ lookup('ini', 'password section=clientreadonly file=' + uberspace_mycnffetch_destination) }}"
