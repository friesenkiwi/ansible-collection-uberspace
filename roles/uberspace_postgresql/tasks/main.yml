- name: Set PostgreSQL version
  debug:
    msg: "Set desired PostgreSQL version as uberspace_tools_goal.postgresql via uberspace_account role"
# TODO only run for postgresql
- name: Run tools tasks of uberspace account role
  tags: tools
  import_role:
    name: uberspace_account
    tasks_from: tools

- name: Configure environment
  blockinfile:
    path: ~/.bash_profile
    block: "{{ lookup('template', 'bash_profile.j2') }}"
    insertbefore: export PATH
    marker: "# {mark} ANSIBLE MANAGED BLOCK PostgreSQL"

- name: Store PostgreSQL environment as fact for later use
  tags: environment
  set_fact:
    postgres_environment: "{{ postgres_environment }}"

- name: Create .pgpass file
  template:
    src: pgpass.j2
    dest: "{{ postgres_pgpassfile }}"
    mode: "0600"
- name: "Check PostgreSQL cluster is already initialized"
  stat:
    path: "{{ postgres_data_dir }}"
  register: postgresqlinitialized
- name: Store password into temp file
  when: not postgresqlinitialized.stat.exists
  lineinfile:
    line: "{{ postgres_password_clusteruser }}"
    path: "{{ postgres_pgpassfile }}.tmp"
    create: true
- name: Initialize PostgreSQL cluster
  environment: "{{ postgres_environment }}"
  shell: 'initdb --pwfile="{{ postgres_pgpassfile }}.tmp" --auth=scram-sha-256 -E UTF8 -D {{ postgres_data_dir }}'
  args:
    creates: "{{ postgres_data_dir }}"
- name: Remove temp password file
  file:
    dest: "{{ postgres_pgpassfile }}.tmp"
    state: absent

- name: Change config file to set socket directory
  lineinfile:
    dest: "{{ postgres_data_dir }}/postgresql.conf"
    regexp: 'unix_socket_directories'
    line: "unix_socket_directories = '{{ uberspace_spacedir }}/tmp'"

- name: Deploy supervisord service description ini
  template:
    src: postgresql.ini.j2
    dest: "{{ uberspace_services_dir }}/postgresql.ini"
  notify: Reread supervisord config

- name: Flush handlers to enact changes
  meta: flush_handlers

- name: Install ansible dependency psychopg2 (last python 2.7 compatible version) via pip into user
  pip:
    name: psycopg2<2.9
    extra_args: --user

- name: Create databases
  loop: "{{ postgres_databases }}"
  environment: "{{ postgres_environment }}"
  postgresql_db:
    login_user: "{{ postgres_username_clusteruser }}"
    encoding: UTF-8
    name: "{{ item }}"

- name: Create postgresql users
  loop: "{{ postgres_users }}"
  environment: "{{ postgres_environment }}"
  postgresql_user:
    login_user: "{{ postgres_username_clusteruser }}"
    db: "{{ postgres_databases[0] }}"
    name: "{{ item.user }}"
    password: "{{ item.password }}"
